apiVersion: v1
data:
  NODE_ENV: development
  NODE_OPTIONS: '"--max-old-space-size=7000"'
kind: ConfigMap
metadata:
  labels:
    app: nest-prisma-template
    sla: aws-critical
    source: nest-prisma-template
  name: nest-prisma-template-env
  namespace: standalone
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nest-prisma-template
    service: app
    sla: aws-critical
    source: nest-prisma-template
  name: nest-prisma-template-app
  namespace: standalone
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: nest-prisma-template
    service: app
    sla: aws-critical
    source: nest-prisma-template
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nest-prisma-template
    service: database
    sla: aws-critical
    source: nest-prisma-template
  name: nest-prisma-template-database
  namespace: standalone
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: nest-prisma-template
    service: database
    sla: aws-critical
    source: nest-prisma-template
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    commit: using_external_image
    image: harbor.bratislava.sk/standalone/nest-prisma-template
    repositoryUrl: using_external_image
    tag: undefined
  labels:
    app: nest-prisma-template
    service: app
    sla: aws-critical
    source: nest-prisma-template
  name: nest-prisma-template-app
  namespace: standalone
spec:
  selector:
    matchLabels:
      app: nest-prisma-template
      service: app
      sla: aws-critical
      source: nest-prisma-template
  template:
    metadata:
      labels:
        app: nest-prisma-template
        service: app
        sla: aws-critical
        source: nest-prisma-template
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@nest-prisma-template-database:5432/$(POSTGRES_DB)?schema=public
        envFrom:
        - secretRef:
            name: nest-prisma-template-database-secret
        - configMapRef:
            name: nest-prisma-template-env
        image: nest-prisma-template
        imagePullPolicy: IfNotPresent
        name: app
        readinessProbe:
          httpGet:
            path: /api
            port: 3000
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 32Mi
      imagePullSecrets:
      - name: harbor-secret-dev-standalone-bratiska-cli
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: nest-prisma-template
    service: database
    sla: aws-critical
    source: nest-prisma-template
  name: nest-prisma-template-database
  namespace: standalone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nest-prisma-template
      service: database
      sla: aws-critical
      source: nest-prisma-template
  serviceName: nest-prisma-template-database
  template:
    metadata:
      labels:
        app: nest-prisma-template
        service: database
        sla: aws-critical
        source: nest-prisma-template
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: nest-prisma-template-database-secret
        image: postgres:14-alpine
        name: database
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresql
          subPath: postgresql
  volumeClaimTemplates:
  - metadata:
      labels:
        app: nest-prisma-template
        service: database
        sla: aws-critical
        source: nest-prisma-template
      name: postgresql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    cert-manager.io/issue-temporary-certificate: "true"
    kubernetes.io/ingress.class: haproxy
  labels:
    app: nest-prisma-template
    service: app
    sla: aws-critical
    source: nest-prisma-template
  name: nest-prisma-template-ingress
  namespace: standalone
spec:
  rules:
  - host: nest-prisma-template.dev.bratislava.sk
    http:
      paths:
      - backend:
          service:
            name: nest-prisma-template-app
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - nest-prisma-template.dev.bratislava.sk
    secretName: nest-prisma-template-tls
